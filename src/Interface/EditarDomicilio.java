/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import ConexionSingleton.Conexion;
import Diagrama.Domicilio;
import Diagrama.ListadoTipoLocalidad;
import Diagrama.ListadoTipoMunicipio;
import Diagrama.ListadoTipoVivienda;
import Diagrama.Localidad;
import Diagrama.Municipio;
import Diagrama.tipoVivienda;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class EditarDomicilio extends javax.swing.JFrame {
    
    
    Conexion conectar = Conexion.getInstace();
    Connection con = conectar.conectar();
    public static int idDom = 0;

    /**
     * Creates new form EditarDomicilio
     */
    public EditarDomicilio() {
        initComponents();
        cargarTabla();
        cargarCombo(cbTipoVivienda);
        cargarComoMunicipio(cbMunicipio);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtColonia = new javax.swing.JTextField();
        txtCodigoPostal = new javax.swing.JTextField();
        txtEstado = new javax.swing.JTextField();
        cbTipoVivienda = new javax.swing.JComboBox<>();
        cbLocalidad = new javax.swing.JComboBox<>();
        cbMunicipio = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEditar = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnHabitantes = new javax.swing.JButton();
        btnguardar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registrar domicilio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        cbLocalidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbLocalidadMouseClicked(evt);
            }
        });

        cbMunicipio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMunicipioItemStateChanged(evt);
            }
        });
        cbMunicipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMunicipioActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Calle Y Numero:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Colonia:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Codigo Postal:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Municipio:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Estado:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tipo De Vivienda:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Localidad");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(cbTipoVivienda, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(cbLocalidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cbMunicipio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtCodigoPostal))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtColonia))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(txtColonia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addComponent(txtCodigoPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(cbLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbTipoVivienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Nuevo Registro");

        tblEditar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Vivienda", "Calle y numero", "Colonia", "Codigo Postal", "Municipio", "Localidad", "Estado", "Tipo de Vivienda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEditarMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEditar);

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actualizar.gif"))); // NOI18N
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar.png"))); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnHabitantes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Editar habitantes.png"))); // NOI18N
        btnHabitantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHabitantesActionPerformed(evt);
            }
        });

        btnguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.gif"))); // NOI18N
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        jLabel9.setText("Guardar");

        jLabel10.setText("Actualizar");

        jLabel11.setText("Actualizar habitantes");

        jLabel12.setText("Eliminar Registro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(290, 290, 290))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addGap(51, 51, 51))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnHabitantes, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnguardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel12))
                                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(18, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(btnguardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHabitantes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbLocalidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbLocalidadMouseClicked

    }//GEN-LAST:event_cbLocalidadMouseClicked

    private void cbMunicipioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMunicipioItemStateChanged

    }//GEN-LAST:event_cbMunicipioItemStateChanged

    private void cbMunicipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMunicipioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMunicipioActionPerformed

    private void tblEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEditarMouseClicked
        try {
            int fila = tblEditar.getSelectedRow();
            int idDomicilio = Integer.parseInt(tblEditar.getValueAt(fila, 0).toString());
            PreparedStatement ps;
            ResultSet rs;
            String consulta = "Select direccion.idVivienda, direccion.calleYNumero, direccion.codigoPostal, direccion.colonia,Municipio.municipio,Localidad.Localidad, direccion.estado, tipoVivienda.tipoVivienda "+
                "from dbo.direccion "+
                "inner  join tipoVivienda on direccion.idTipoVivienda = tipoVivienda.idTipoVivienda "+
                "inner join Localidad on direccion.idLocalidad = Localidad.idLocalidad "+
                "inner join Municipio on direccion.municipio = municipio.idMunicipio "+
                "where idVivienda =?";
            
            
            ps = con.prepareStatement(consulta);
            ps.setInt(1, idDomicilio);
            rs = ps.executeQuery();
            
            while (rs.next()){
            idDom = rs.getInt("idVivienda");
            txtCalle.setText(rs.getString("calleYNumero"));
            txtColonia.setText(rs.getString("colonia"));
            txtCodigoPostal.setText(rs.getString("codigoPostal"));
            cbMunicipio.setSelectedItem(rs.getString("municipio"));
            cbLocalidad.setSelectedItem(rs.getString("Localidad"));
            txtEstado.setText(rs.getString("estado"));
            cbTipoVivienda.setSelectedItem(rs.getString("tipoVivienda"));
            
            }
            
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_tblEditarMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if (idDom == 0){
            JOptionPane.showMessageDialog(null, "Por favor selecione un domicilio");
        }else {
            Municipio municipio = new Municipio();
            tipoVivienda vivienda = new tipoVivienda();
            Domicilio domicilio = new Domicilio();
            Localidad localidad = new Localidad();

            domicilio.setCalleNumero(txtCalle.getText());
            domicilio.setColonia(txtColonia.getText());
            domicilio.setCodigoPostal(Integer.parseInt(txtCodigoPostal.getText()));
            municipio.setMunicipio(cbMunicipio.getSelectedItem().toString());
            domicilio.setMunicipio(municipio);
            domicilio.setEstado(txtEstado.getText());
            vivienda.setVivienda(cbTipoVivienda.getSelectedItem().toString());
            domicilio.setVivienda(vivienda);
            localidad.setLocalidad(cbLocalidad.getSelectedItem().toString());
            domicilio.setLocalidad(localidad);
            domicilio.setIdDomicilio(idDom);
            domicilio.ActualizarDomicilio();

            limpiar();
            cargarTabla();
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        Domicilio domicilio = new Domicilio();
        domicilio.setIdDomicilio(idDom);
        domicilio.eliminarDomicilio();
        limpiar();
        cargarTabla();
        idDom = 0;
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnHabitantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHabitantesActionPerformed
           
        if (idDom == 0){
            JOptionPane.showMessageDialog(null, "Por favor selecione un domicilio");
        }else{
           RegistroHabitante rh = new RegistroHabitante();
           System.out.println(idDom);
           rh.setVisible(true);
        }
        
    }//GEN-LAST:event_btnHabitantesActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        /*Metodos met = new Metodos();*/
        Domicilio domicilio = new Domicilio();
        Municipio municipio = new Municipio();
        tipoVivienda vivienda = new tipoVivienda();
        Localidad localidad = new Localidad();
        
        domicilio.setCalleNumero(txtCalle.getText());
        domicilio.setColonia(txtColonia.getText());
        domicilio.setCodigoPostal(Integer.parseInt(txtCodigoPostal.getText()));
        municipio.setMunicipio(cbMunicipio.getSelectedItem().toString());
        domicilio.setMunicipio(municipio);
        domicilio.setEstado(txtEstado.getText());
        vivienda.setVivienda(cbTipoVivienda.getSelectedItem().toString());
        domicilio.setVivienda(vivienda);
        localidad.setLocalidad(cbLocalidad.getSelectedItem().toString());
        domicilio.setLocalidad(localidad);
        domicilio.registrarDomicilio();

        limpiar();
        cargarTabla();
        
        
        idDom = getIdDomicilio();
        RegistroHabitante rh = new RegistroHabitante();
        rh.setVisible(true);
    }//GEN-LAST:event_btnguardarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            conectar.cerrarConexion();
            JOptionPane.showMessageDialog(null, "Adios!!!");
        } catch (SQLException ex) {
            Logger.getLogger(EditarDomicilio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarDomicilio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarDomicilio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarDomicilio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarDomicilio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarDomicilio().setVisible(true);
            }
        });
    }
    
    
    public void cargarTabla(){
        DefaultTableModel modeloTabla = (DefaultTableModel) tblEditar.getModel();
        modeloTabla.setRowCount(0);
        
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        
        String consulta = "Select direccion.idVivienda, direccion.calleYNumero, direccion.codigoPostal, direccion.colonia,Municipio.municipio,Localidad.Localidad, direccion.estado, tipoVivienda.tipoVivienda "+
                "from dbo.direccion "+
                "inner  join tipoVivienda on direccion.idTipoVivienda = tipoVivienda.idTipoVivienda "+
                "inner join Localidad on direccion.idLocalidad = Localidad.idLocalidad "+
                "inner join Municipio on direccion.municipio = municipio.idMunicipio ";
                
        try {
            ps = con.prepareStatement(consulta);
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            
            while(rs.next()){
            Object[] fila = new Object [columnas];
            for (int indice = 0; indice < columnas; indice ++){
                fila[indice] = rs.getObject(indice +1);
            }
            
            modeloTabla.addRow(fila);
            
            }           

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
        
        
    
    }
    
    
    private void cargarCombo(JComboBox c) {
       DefaultComboBoxModel combo = new DefaultComboBoxModel();
       c.setModel(combo);
       ListadoTipoVivienda ltv = new ListadoTipoVivienda();
       
       try{
           Statement st = con.createStatement();
           ResultSet rs = st.executeQuery("select tipoVivienda from dbo.tipoVivienda");
           while(rs.next()){
               tipoVivienda tv = new tipoVivienda();
               tv.setVivienda(rs.getString(1));
               ltv.AgregarTipoVivienda(tv);
               combo.addElement(tv.getVivienda());
           }
       
       }catch(Exception e){
           System.out.println("No se puede mostrar combo box" + e);
       }
    }

    private void cargarComoMunicipio(JComboBox c) {
       DefaultComboBoxModel combo = new DefaultComboBoxModel();
       c.setModel(combo);
       ListadoTipoMunicipio ltm = new ListadoTipoMunicipio();
       try {
           Statement st = con.createStatement();
           ResultSet rs = st.executeQuery("select municipio from dbo.Municipio");
           while(rs.next()){
               Municipio mu = new Municipio();
               mu.setMunicipio(rs.getString(1));
               ltm.AgregarTipoMunicipio(mu);
               combo.addElement(mu.getMunicipio());
           }  
       }catch(SQLException e){
           System.out.println("No se puede mostrar combo box "+ e.toString());
       }
       
       c.addActionListener(new ActionListener() {
           @Override
           public void actionPerformed(ActionEvent e) {
               System.out.println(c.getSelectedItem());
               cargarComoLocalidad(cbLocalidad);  
           }
       });
        
    }
   
    private void cargarComoLocalidad(JComboBox c) {
       DefaultComboBoxModel combo = new DefaultComboBoxModel();
       c.setModel(combo);
       ListadoTipoLocalidad ltl = new ListadoTipoLocalidad();
       Municipio mun = new Municipio();
       mun.setMunicipio(cbMunicipio.getSelectedItem().toString());
       
       try {
           Statement st = con.createStatement();
           ResultSet rs = st.executeQuery("select Localidad from dbo.Localidad where idMunicipio = " + mun.getIdMunicipio());
           while(rs.next()){
               Localidad loc = new Localidad();
               loc.setLocalidad(rs.getString(1));
               ltl.AgregarTipoLocalidad(loc);
               combo.addElement(loc.getLocalidad());
           }  
       }catch(SQLException e){
           System.out.println("No se puede mostrar combo box "+ e.toString());
       }
        
    }
    
        public int getIdDomicilio () {
        int idDomicilio = 0;
        
        try {
        PreparedStatement ps;
        ResultSet rs;
        
        ps = con.prepareStatement("select top 1 idVivienda from dbo.direccion order by idVivienda desc");
        rs = ps.executeQuery();
        
        while (rs.next()){
            idDomicilio = rs.getInt(1);
        }
        
        }catch(SQLException ex){
        
            JOptionPane.showMessageDialog(null, ex);
        }
    
    return idDomicilio;

}
    
    
    
    
    private void limpiar () {
        txtCalle.setText("");
        txtColonia.setText("");
        txtCodigoPostal.setText("");
        txtEstado.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnHabitantes;
    private javax.swing.JButton btnguardar;
    public javax.swing.JComboBox<String> cbLocalidad;
    private javax.swing.JComboBox<String> cbMunicipio;
    public javax.swing.JComboBox<String> cbTipoVivienda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblEditar;
    public javax.swing.JTextField txtCalle;
    public javax.swing.JTextField txtCodigoPostal;
    public javax.swing.JTextField txtColonia;
    public javax.swing.JTextField txtEstado;
    // End of variables declaration//GEN-END:variables
}
